@page "/entidad/{tipo}/editar"
@page "/entidad/{tipo}/editar{id:int}"
@page "/entidad/{id:int}/editar"
@rendermode InteractiveServer
<PageTitle>Editar Entidad</PageTitle>

<div class="container mt-5 p-4 border rounded shadow-lg bg-light">
    <h2 class="text-center text-primary mb-4">Editando @tipo</h2>

    <EditForm Model="seriepeliculalibro" OnValidSubmit="guardarDatos">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="Nombre" class="form-label">Nombre</label>
                <InputText id="Nombre" class="form-control" @bind-Value="seriepeliculalibro.Nombre"></InputText>
            </div>

            <div class="col-md-6 mb-3">
                <label for="Pais" class="form-label">País</label>
                <InputText id="Pais" class="form-control" @bind-Value="seriepeliculalibro.Pais"></InputText>
            </div>

            <div class="col-md-6 mb-3">
                <label for="Idioma" class="form-label">Idioma</label>
                <InputText id="Idioma" class="form-control" @bind-Value="seriepeliculalibro.Idioma"></InputText>
            </div>

            <div class="col-md-6 mb-3">
                <label for="FotoUrl" class="form-label">URL de la Foto</label>
                <InputText type="url" id="FotoUrl" class="form-control" @bind-Value="seriepeliculalibro.FotoUrl" />
            </div>

            <div class="col-12 mb-3">
                <label for="Resumen" class="form-label">Resumen</label>
                <InputTextArea id="Resumen" class="form-control" @bind-Value="seriepeliculalibro.Resumen"></InputTextArea>
            </div>
        </div>

        <hr class="my-4" />

        <h4 class="text-center text-secondary">Personajes</h4>

        <table class="table table-striped table-hover mt-4">
            <thead class="table-primary">
                <tr>
                    <th>Foto</th>
                    <th>Nombre</th>
                    <th>Edad</th>
                    <th>Signo Zodiacal</th>
                    <th>Poder Característico</th>
                    <th>Apodo</th>
                    <th>Raza</th>
                    <th>Foto</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in seriepeliculalibro.personajes)
                {
                    <tr>
                        <td><img src="@item.FotoUrl" alt="@item.Nombre" class="rounded" style="height: 70px;"></td>
                        <td><InputText @bind-Value="@item.Nombre" class="form-control"/></td>
                        <td><InputNumber @bind-Value="@item.Edad" class="form-control"/></td>
                        <td><InputText @bind-Value="@item.Signozodiacal" class="form-control"/></td>
                        <td><InputText @bind-Value="@item.PoderCaracteristico" class="form-control"/></td>
                        <td><InputText @bind-Value="@item.Apodo" class="form-control"/></td>
                        <td><InputText @bind-Value="@item.Raza" class="form-control"/></td>
                        <td><InputText @bind-Value="@item.FotoUrl" class="form-control"/></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-center mb-3">
            <button type="button" class="btn btn-success" @onclick="agregarPersonaje">Agregar Personaje</button>
        </div>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    </EditForm>
</div>


@code
{
    [Parameter]
    public string tipo {get;set;} =string.Empty;

    [Parameter]
    public int Id {get;set;} = 0;
    SeriePeliculaLibro seriepeliculalibro = new SeriePeliculaLibro();
    protected override async Task OnParametersSetAsync(){
        switch(tipo)
        {
            case "Libros":
                tipoEntidad = TipoEntidad.Libro;
                break;
            case "Peliculas":
                tipoEntidad = TipoEntidad.Pelicula;
                break;
            case "Series":
                tipoEntidad = TipoEntidad.Serie;
                break;
            default:
                //await JSx.InvokeVoidAsync("alert","Tipo de entidad no valido");
                break;

        }
    }
    TipoEntidad tipoEntidad;
    async Task guardarDatos()
    {
        seriepeliculalibro.Tipo = tipoEntidad;
        
        if (seriepeliculalibro.Id > 0)
        {
            Sc.SeriePeliculaLibros.Update(seriepeliculalibro);
        }
        else
        {
            Sc.SeriePeliculaLibros.Add(seriepeliculalibro);
        }

        Sc.SeriePeliculaLibros.Add(seriepeliculalibro);
        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert","Datos guardados");
        NavMan.NavigateTo($"/entidad/{tipo}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender){
        if(firstRender)
        {
            if(Id > 0)
            {
                seriepeliculalibro = Sc.SeriePeliculaLibros.FirstOrDefault(x => x.Id == Id) ?? new SeriePeliculaLibro();
                StateHasChanged();
            }
        }
    }

    private void agregarPersonaje()
    {
        seriepeliculalibro.personajes.Add(new Personaje());
        StateHasChanged();
    }
}